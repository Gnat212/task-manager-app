//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManagerRemakeApp.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.SqlClient;
    using System.Windows;

    public partial class TaskDbEntities : DbContext
    {
        public TaskDbEntities()
            : base("name=TaskDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Task> Task { get; set; }
        public virtual DbSet<TaskUser> TaskUser { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<SmtpServer> SmtpServer { get; set; }
        public virtual DbSet<TelegramBot> TelegramBot { get; set; }
        public virtual DbSet<TaskFile> TaskFile { get; set; }
        public virtual DbSet<Departament> Departament { get; set; }

        public static TaskDbEntities NewContext
        {
            get
            {
                var dbContext = new TaskDbEntities();
                try
                {
                    dbContext.Database.Connection.Open();
                    dbContext.Database.Connection.Close();
                }
                catch (SqlException)
                {
                    HandyControl.Controls.MessageBox.Show("Нет подключения к базе данных", "Ошибка", MessageBoxButton.OK);
                    Application.Current.Shutdown();
                }
                return dbContext;
            }
        }
    }
}
